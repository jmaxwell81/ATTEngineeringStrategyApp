<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_attme_engr_strat_purchase_requisition</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_attme_engr_strat_purchase_requisition">active=true^expense_type=Opex^EQ<item endquery="false" field="active" goto="false" newquery="false" operator="=" or="false" value="true"/>
            <item endquery="false" field="expense_type" goto="false" newquery="false" operator="=" or="false" value="Opex"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>PRQ set last and next document (Opex)</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	//La presente business rule determina cual es el ultimo documento entregado para tipo de expense OPEX, para este tipo de solicitud de compra se tienen contemplado los documentos: OP, PR, RFQ y SOCA u OCA, en dicho orden.
	
	var last_delivered_document;
	var next_document_to_deliver;
	
	if(!current.op.nil())
	{	
		last_delivered_document = "OP";
		next_document_to_deliver = "PR";
	}
	
	if(!current.pr.nil())
	{	
		last_delivered_document = "PR";
		next_document_to_deliver = "RFQ";
	}
	
	if(!current.rfq.nil())
	{	
		last_delivered_document = "RFQ";
		next_document_to_deliver = "SOCA/OCA";
	}
	
	if(!current.soca.nil() || !current.oca_number.nil())
	{	
		last_delivered_document = "SOCA/OCA";
		next_document_to_deliver = "";
	   
	}
	   
	
	current.last_delivered_document = last_delivered_document;
	current.next_document_to_deliver = next_document_to_deliver;

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>hugo.ruano</sys_created_by>
        <sys_created_on>2017-11-29 16:02:03</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>65f8a520dbbe0f00e7bbdbbb5e9619f5</sys_id>
        <sys_mod_count>13</sys_mod_count>
        <sys_name>PRQ set last and next document (Opex)</sys_name>
        <sys_overrides/>
        <sys_package display_value="Engineering Strategy" source="x_attme_engr_strat">8fcb836cdb4e034028f3d5ab5e961972</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Engineering Strategy">8fcb836cdb4e034028f3d5ab5e961972</sys_scope>
        <sys_update_name>sys_script_65f8a520dbbe0f00e7bbdbbb5e9619f5</sys_update_name>
        <sys_updated_by>hugo.ruano</sys_updated_by>
        <sys_updated_on>2017-11-29 18:54:59</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=65f8a520dbbe0f00e7bbdbbb5e9619f5"/>
</record_update>
